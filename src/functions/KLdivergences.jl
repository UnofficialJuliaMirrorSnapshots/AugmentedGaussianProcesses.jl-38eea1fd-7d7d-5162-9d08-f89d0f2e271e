"""Compute the KL Divergence between the GP Prior and the variational distribution for the variational full batch model"""
function GaussianKL(model::VGP)
    return 0.5*sum(opt_trace.(model.invKnn,model.Œ£+(model.Œº.-model.Œº‚ÇÄ).*transpose.(model.Œº.-model.Œº‚ÇÄ)).-model.nFeature.-logdet.(model.Œ£).-logdet.(model.invKnn))
end

"""Compute the KL Divergence between the Sparse GP Prior and the variational distribution for the sparse variational model"""
function GaussianKL(model::SVGP)
    return 0.5*sum(opt_trace.(model.invKmm,model.Œ£+(model.Œº.-model.Œº‚ÇÄ).*transpose.(model.Œº.-model.Œº‚ÇÄ)).-model.nFeature.-logdet.(model.Œ£).-logdet.(model.invKmm))
end


""" Compute the equivalent of KL divergence between an improper prior and a variational Gamma distribution"""
function GammaImproperKL(model::AbstractGP)
    return model.inference.œÅ*sum(-model.likelihood.Œ±.+log(model.likelihood.Œ≤[1]).-lgamma.(model.likelihood.Œ±).-(1.0.-model.likelihood.Œ±).*digamma.(model.likelihood.Œ±))
end

"""KL(q(œâ)||p(œâ)), where q(œâ) = IG(Œ±,Œ≤) and p(œâ) = IG(Œ±_p,Œ≤_p)"""
function InverseGammaKL(Œ±,Œ≤,Œ±_p,Œ≤_p)
    sum((Œ±_p-Œ±).*digamma(Œ±_p) .- log.(gamma.(Œ±_p)).+log.(gamma.(Œ±)) .+  Œ±.*(log.(Œ≤_p).-log.(Œ≤)).+Œ±_p.*(Œ≤.-Œ≤_p)./Œ≤_p)
end

"""KL(q(œâ)||p(œâ)), where q(œâ) = Po(Œ≥) and p(œâ) = Po(Œª)"""
function PoissonKL(Œ≥::AbstractVector{<:Real},Œª::Real)
    Œª*length(Œ≥)-(1.0+log(Œª))*sum(Œ≥)+dot(Œ≥,log.(Œ≥))
end

"""KL(q(œâ)||p(œâ)), where q(œâ) = Po(Œ≥) and p(œâ) = Po(Œª)"""
function PoissonKL(Œ≥::AbstractVector{<:Real},Œª::AbstractVector{<:Real})
    sum(Œª)-sum(Œ≥)+dot(Œ≥,log.(Œ≥))-dot(Œ≥,log.(Œª))
end

"""KL(q(œâ)||p(œâ)), where q(œâ) = PG(b,c) and p(œâ) = PG(b,0). Œ∏ = ùë¨[œâ]"""
function PolyaGammaKL(b,c,Œ∏)
    -0.5*dot(c.^2,Œ∏)-0.5*dot(b,logcosh.(0.5*c))
end

"""Compute Entropy for Generalized inverse Gaussian latent variables (BayesianSVM)"""
function GIGEntropy(model::AbstractGP{<:BayesianSVM})
    return model.inference.œÅ*sum(broadcast(b->0.5*sum(log.(b))+sum(log.(2.0*besselk.(0.5,sqrt.(b))))-0.5*sum(sqrt.(b)),model.likelihood.œâ))
end

"""Entropy of GIG variables with parameters a,b and p and omitting the derivative d/dpK_p cf <https://en.wikipedia.org/wiki/Generalized_inverse_Gaussian_distribution#Entropy>"""
function GIGEntropy(a,b,p)
    sqrtab = sqrt.(a.*b)
    return sum(0.5*log.(a./b))+sum(log.(2*besselk.(p,sqrtab)))+ sum(0.5*sqrtab./besselk.(p,sqrtab).*(besselk.(p+1,sqrtab)+besselk.(p-1,sqrtab)))
end
